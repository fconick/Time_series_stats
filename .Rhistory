Data <- read.csv(file = '~/Results_Scraper/ALL LEAGUES/All_leagues.csv')
head(Data)
Away_vars <- c('Away', 'G_Away')
Home_vars <- c('Home', 'G_Home')
Away_vars <- c('Away', 'G_Away')
colnames(Data_home) %in% c(Home_vars)
Data_home <- Data
colnames(Data_home) %in% c(Home_vars)
which( c(Home_vars) %in%  colnames(Data_home) )
which( c(Home_vars, Away_vars) %in%  colnames(Data_home) )
which( c(Home_vars,general_vars, Away_vars) %in%  colnames(Data_home) )
general_vars <- c('Id', 'League', 'Date', 'Stage', 'Substage', 'League_G')
which( c(Home_vars,general_vars, Away_vars) %in%  colnames(Data_home) )
which( c(Home_vars,general_vars, Away_vars) == colnames(Data_home) )
c(Home_vars,general_vars, Away_vars) == colnames(Data_home)
Home_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Rename <- c( 'Goals')
Home_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Home_vars_replace
colnames(Data_home)%in% Home_vars
?sort
order(colnames(Data_home)%in% Home_vars)
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Home_vars_replace[i]
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Home_vars_replace[i]
}
head(Data_home)
Away_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
Data <- read.csv(file = '~/Results_Scraper/ALL LEAGUES/All_leagues.csv')
head(Data)
#Split data function
general_vars <- c('Id', 'League', 'Date', 'Stage', 'Substage', 'League_G')
Home_vars <- c('Home', 'G_Home')
Away_vars <- c('Away', 'G_Away')
Rename <- c( 'Goals')
Data_by_team <- function(Data, general_vars, Home_vars, Away_vars, Rename){
#Organize the Home Data
Data_home <- Data
#rename column names of the data
Home_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Away_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Home_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Away_vars_replace[i]
}
#Organize the Home Data
Data_home <- Data
#rename column names of the data
Home_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Away_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Home_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Away_vars_replace[i]
}
head(Data_home)
#Organize the Home Data
Data_away <- Data
#rename column names of the data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
opponent_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_away)[colnames(Data_away)==Away_vars[i]] <- Team_vars_replace[i]
colnames(Data_away)[colnames(Data_away)==Home_vars[i]] <- Opponent_vars_replace[i]
}
#rename column names of the data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
opponent_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Team_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Opponent_vars_replace[i]
}
#2.- Away teams data
#Organize the Home Data
Data_away <- Data
#rename column names of the data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
opponent_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_away)[colnames(Data_away)==Away_vars[i]] <- Team_vars_replace[i]
colnames(Data_away)[colnames(Data_away)==Home_vars[i]] <- Opponent_vars_replace[i]
}
Opponent_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Team_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Opponent_vars_replace[i]
}
Data_away <- Data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
opponent_vars_replace <- c('Opponent', paste(Rename, 'Scored', sep ='_'))
for( i in 1: length(Home_vars_replace)){
colnames(Data_away)[colnames(Data_away)==Away_vars[i]] <- Team_vars_replace[i]
colnames(Data_away)[colnames(Data_away)==Home_vars[i]] <- Opponent_vars_replace[i]
}
head(Data_home)
#rename column names of the data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Opponent_vars_replace <- c('Opponent', paste(Rename, 'Received', sep ='_'))
#1 .- Home teams data
#Organize the Home Data
Data_home <- Data
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Team_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Opponent_vars_replace[i]
}
#2.- Away teams data
#Organize the Home Data
Data_away <- Data
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_away)[colnames(Data_away)==Away_vars[i]] <- Team_vars_replace[i]
colnames(Data_away)[colnames(Data_away)==Home_vars[i]] <- Opponent_vars_replace[i]
}
head(Data_away)
head(Data_home)
library(tidyverse)
All_data <- rbind(Data_home, Data_away)
dim(All_data)
head(All_data)
tail(All_data)
Data_by_team <- function(Data, general_vars, Home_vars, Away_vars, Rename){
#rename column names of the data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Opponent_vars_replace <- c('Opponent', paste(Rename, 'Received', sep ='_'))
#1 .- Home teams data
#Organize the Home Data
Data_home <- Data
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Team_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Opponent_vars_replace[i]
}
#2.- Away teams data
#Organize the Home Data
Data_away <- Data
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_away)[colnames(Data_away)==Away_vars[i]] <- Team_vars_replace[i]
colnames(Data_away)[colnames(Data_away)==Home_vars[i]] <- Opponent_vars_replace[i]
}
#3.- Join the data
All_data <- rbind(Data_home, Data_away)
}
HAHA <- Data_by_team(Data, general_vars, Home_vars, Away_vars, Rename)
head(HAHA)
Data <- read.csv(file = '~/LIGA MX ESPN DATA/ESPNLaLiga_STATS.csv')
head(Data)
Data <- read.csv(file = 'C:\Users\fco_n\Documents\fcoStartistician\Index_performance\DATABASE.csv')
Data <- read.csv(file = 'C:/Users/fco_n/Documents/fcoStartistician/Index_performance/DATABASE.csv')
head(Data)
head(HAHA)
write.csv(HAHA, 'DATABASE_example.csv')
write.csv(HAHA, 'DATABASE_example.csv', row.names = F)
head(HAHA)
DB <- read.csv(file = 'DATABASE_example.csv', stringsAsFactors = F)
head(DB)
Team <- 'Chelsea'
DATA <- subset(DB, Team==Team)
Stat <- 'Goals_Scored'
DATA <- subset(DB, Team==Team)
ggplot(data = DATA, aes(x = as.Date(Date)) y = Stat )  +
geom_line()
ggplot(data = DATA, aes(x = as.Date(Date)), y = Stat )  +
geom_line()
ggplot(data = DATA, aes(x = as.Date(Date), y = Stat )  +
geom_line()
}
ggplot(data = DATA, aes(x = as.Date(Date), y = Stat ))  +
geom_line()
ggplot(data = DATA, aes(x = as.Date(Date)), aes_string(y = Stat ))  +
geom_line()
ggplot(data = DATA, aes(x = as.Date(Date)))  +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date)))  +
geom_point(aes_string(y = Stat ))
subset(DATA, Goals_Scored ==10)
team <- 'Chelsea'
DATA <- subset(DB, Team==Team)
subset(DATA, Goals_Scored ==10)
DATA <- subset(DB, Team==team)
subset(DATA, Goals_Scored ==10)
ggplot(data = DATA, aes(x = as.Date(Date)))  +
geom_point(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date)))  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date)), group = League)  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
head(DATA)
ggplot(data = DATA, aes(x = as.Date(Date)), color = League)  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date), group = League))  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date), group = League, colour = League))  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date), group = League, colour = League_G))  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date)))  +
geom_point(aes_string(y = Stat )) +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA, aes(x = as.Date(Date)), aes_string(y = Stat ))  +
geom_point() +
geom_line(aes_string(y = Stat )) +
}
ggplot(data = DATA, aes(x = as.Date(Date)), aes_string(y = Stat ))  +
geom_point() +
geom_line(aes_string(y = Stat ))
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
head(DATA)
DATA <- subset(DB, Team==team , League == 'Premier League 2016/2017 ')
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
DATA <- subset(DB, Team==team , League == 'Premier League 2016/2017 ')
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
head(DATA)
DATA <- subset(DB, Team==team , League == 'Premier League 2016/2017')
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
head(DATA)
DATA <- subset(DB, Team==team , League == ' Premier League 2016/2017')
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
head(DB)
unique(League)
unique(DB$League)
DATA <- subset(DB, Team==team , League == 'Premier League 2016/2017 ')
head(DATA)
DATA <- subset(DB, Team==team , League == "Premier League 2016/2017 ")
head(DATA)
DATA <- subset(DB, Team==team & League == "Premier League 2016/2017 ")
head(DATA)
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
theme_set(theme_minimal())
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)))
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')
head(DATA)
DATA$Label <- str_sub(DATA$Opponent %>% toupper, 1,3 )
library(stringr)
theme_set(theme_minimal())
DATA <- subset(DB, Team==team & League == "Premier League 2016/2017 ")
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label))
DATA$Label <- str_sub(DATA$Opponent %>% toupper, 1,3 )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label))
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date)))
?geom_text
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date)), nudge_y = .3 )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date)), nudge_y = .3,
check_overlap =  F )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date)), nudge_y = .3,
check_overlap =  T )
head(DATA)
#------------------------------------------------------------------------------
#                           Plot function
#------------------------------------------------------------------------------
library(tidyverse)
Data <- read.csv(file = '~/Results_Scraper/ALL LEAGUES/All_leagues.csv')
general_vars <- c('Id', 'League', 'Date', 'Stage', 'Substage', 'League_G')
Home_vars <- c('Home', 'G_Home')
Away_vars <- c('Away', 'G_Away')
Rename <- c( 'Goals')
Data_by_team <- function(Data, Home_vars, Away_vars, Rename){
#rename column names of the data
Team_vars_replace <- c('Team', paste(Rename, 'Scored', sep ='_'))
Opponent_vars_replace <- c('Opponent', paste(Rename, 'Received', sep ='_'))
#1 .- Home teams data
#Organize the Home Data
Data_home <- Data
Data_home$H_A <- 'Home'
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_home)[colnames(Data_home)==Home_vars[i]] <- Team_vars_replace[i]
colnames(Data_home)[colnames(Data_home)==Away_vars[i]] <- Opponent_vars_replace[i]
}
#2.- Away teams data
#Organize the Home Data
Data_away <- Data
Data_away$H_A <- 'Away'
#Rename columns
for( i in 1: length(Home_vars_replace)){
colnames(Data_away)[colnames(Data_away)==Away_vars[i]] <- Team_vars_replace[i]
colnames(Data_away)[colnames(Data_away)==Home_vars[i]] <- Opponent_vars_replace[i]
}
#3.- Join the data
All_data <- rbind(Data_home, Data_away)
}
HAHA <- Data_by_team(Data, Home_vars , Away_vars, Rename )
head(HAHA)
tail(HAHA)
DB <- HAHA
write.csv(DB, file = 'DATABASE_example.csv', row.names = F)
DB <- read.csv(file = 'DATABASE_example.csv', stringsAsFactors = F)
head(DB)
team <- 'Chelsea'
Stat <- 'Goals_Scored'
DATA <- subset(DB, Team==team & League == "Premier League 2016/2017 ")
DATA$Label <- str_sub(DATA$Opponent %>% toupper, 1,3 )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date))) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date)), nudge_y = .3,
check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date)), nudge_y = .3,
check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A), nudge_y = .3,
check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A), show.legend = F) +
geom_line(aes(x = as.Date(Date)), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A), nudge_y = .3,
check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A), show.legend = F) +
geom_line(aes(x = as.Date(Date), group = H_A), colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A), nudge_y = .3,
check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A), show.legend = F) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A), nudge_y = .3,
check_overlap =  T )
}
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A), show.legend = F) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A), nudge_y = .3,
check_overlap =  T )
}
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A), show.legend = F) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A))  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A), nudge_y = .3,
check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A), show.legend = F)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F
nudge_y = .3,check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A), show.legend = F)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F,
nudge_y = .3,check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A), show.legend = F)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F,
nudge_y = .3, nudge_x = -.2 ,check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date), group = H_A, colour = H_A), show.legend = F)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F,
nudge_y = .3, nudge_x = -.3 ,check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date)), show.legend = F)  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F,
nudge_y = .3, nudge_x = -.3 ,check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date)), show.legend = F, colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F,
nudge_y = .3, nudge_x = -.3 ,check_overlap =  T )
ggplot(data = DATA,  aes_string(y = Stat ))  +
geom_point(aes(x = as.Date(Date), colour = H_A)) +
geom_line(aes(x = as.Date(Date)), show.legend = F, colour = 'gray')  +
geom_text(aes(label = Label, x = as.Date(Date), colour = H_A),, show.legend = F,
nudge_y = .3, nudge_x = -.3 ,check_overlap =  T )
